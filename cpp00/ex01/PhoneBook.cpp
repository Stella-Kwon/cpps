/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   PhoneBook.cpp                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: skwon2 <skwon2@student.hive.fi>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/11/26 16:46:04 by skwon2            #+#    #+#             */
/*   Updated: 2024/12/02 21:58:52 by skwon2           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "PhoneBook.hpp"


PhoneBook::PhoneBook():_currentPosition(0) // contact[]will automatically generated by calling Contract() constructor.
{
    std::cout << "Creating a Phonebook" << std::endl;
}

PhoneBook::~PhoneBook()
{
    std::cout << "Destroying a Phonebook\n";
}

void PhoneBook::addContact(std::string& first_name, std::string& last_name, std::string& nick_name,
			std::string& phone_number, std::string& darkest_secret)
{
    if (_currentPosition < MAX_CONTACT)
        _contact[_currentPosition++] = Contact(first_name, last_name, nick_name, phone_number, darkest_secret);
    else
    {
        _contact[0] = Contact(first_name, last_name, nick_name, phone_number, darkest_secret);
        _currentPosition = 1;
    }
}

int PhoneBook::getPosition() const {
    return _currentPosition;
}

Contact& PhoneBook::getElementContact(int i)
{
    // if (i < 0 || i >= MAX_CONTACT)
    //     throw std::out_of_range("Invalid index"); 
        //better to use return unless the error is rarely happens
        //because it is quite heavy fucntion to use
        //out_of_range is one of specific type of error
        //using throw you can catch the error from call_back function(where you have called this function)
        //by using try and catch 
    return (_contact[i]);
}
